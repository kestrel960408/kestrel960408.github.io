{"version":3,"sources":["webpack:///./src/shapes/frontmatter.js","webpack:///./src/shapes/post.js","webpack:///./src/components/post-nav.jsx","webpack:///./src/emotion/code.jsx","webpack:///./src/components/utterances.jsx","webpack:///./src/templates/blog-post.jsx","webpack:///./src/shapes/page-context.js"],"names":["PropTypes","shape","date","string","isRequired","path","tags","title","id","frontmatter","Wrap","textAlign","prev","display","flexDirection","justifyContent","textTransform","Span","color","theme","textColor","opacity","fontWeight","Link","GatsbyLink","textDecoration","transition","accentColor","PostNav","post","link","to","defaultProps","styles","background","textShadow","fontFamily","whiteSpace","wordSpacing","wordBreak","wordWrap","lineHeight","tabSize","hyphens","margin","overflow","fontStyle","cursor","Utterences","repo","rootElm","React","createRef","useEffect","utterances","document","createElement","utterancesConfig","src","branch","async","Object","keys","forEach","configKey","setAttribute","current","appendChild","className","ref","Main","Header","centerPadding","alignItems","flexWrap","smallMedia","HeaderTitle","width","marginBottom","spacing","HeaderDate","Footer","PostWrap","paddingTop","paddingBottom","marginLeft","spacingPx","PostNavWrap","marginTop","query","BlogPost","data","pageContext","markdownRemark","site","siteMetadata","siteUrl","next","dateTime","dateformat","dangerouslySetInnerHTML","__html","html","context","oneOfType","bool"],"mappings":"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","file":"component---src-templates-blog-post-jsx-c12e38bfbedbe3332812.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nexport default PropTypes.shape({\r\n  date: PropTypes.string.isRequired,\r\n  path: PropTypes.string.isRequired,\r\n  tags: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n});\r\n","import PropTypes from 'prop-types';\r\nimport frontmatter from './frontmatter';\r\n\r\nexport default PropTypes.shape({\r\n  id: PropTypes.string,\r\n  frontmatter,\r\n});\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from '@emotion/styled';\r\nimport { Link as GatsbyLink } from 'gatsby';\r\nimport { context } from '../shapes/page-context';\r\n\r\nconst Wrap = styled.div(({ prev }) => ({\r\n  textAlign: prev ? 'left' : 'right',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  justifyContent: 'flex-start',\r\n  textTransform: 'uppercase',\r\n}));\r\n\r\nconst Span = styled.span(({ theme }) => ({\r\n  color: theme.textColor,\r\n  opacity: 0.35,\r\n  fontWeight: 'bold',\r\n}));\r\n\r\nconst Link = styled(GatsbyLink)(({ theme }) => ({\r\n  color: theme.textColor,\r\n  textDecoration: 'none',\r\n  fontWeight: 'bold',\r\n  transition: 'color 250ms linear',\r\n  ':hover': {\r\n    color: theme.accentColor,\r\n  },\r\n}));\r\n\r\nconst PostNav = ({ prev, post }) => {\r\n  const link = post\r\n    ? <Link to={post.frontmatter.path}>{prev ? 'Previous Post' : 'Next Post'}</Link>\r\n    : <Span>{prev ? 'Previous Post' : 'Next Post'}</Span>;\r\n  return (\r\n    <Wrap prev={prev}>\r\n      {link}\r\n      <small>{post ? post.frontmatter.title : null}</small>\r\n    </Wrap>\r\n  );\r\n};\r\n\r\nPostNav.propTypes = {\r\n  prev: PropTypes.bool,\r\n  post: context.isRequired,\r\n};\r\n\r\nPostNav.defaultProps = {\r\n  prev: false,\r\n};\r\n\r\nexport default PostNav;\r\n","// Based on prism.js okaidai theme\r\nimport React from 'react';\r\nimport { Global } from '@emotion/core';\r\n\r\nexport default () => (\r\n  <Global\r\n    styles={{\r\n      'code[class*=\"language-\"],pre[class*=\"language-\"]': {\r\n        background: 'none',\r\n        textShadow: '0 1px rgba(0, 0, 0, 0.3)',\r\n        fontFamily: \"Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace\",\r\n        textAlign: 'left',\r\n        whiteSpace: 'pre',\r\n        wordSpacing: 'normal',\r\n        wordBreak: 'normal',\r\n        wordWrap: 'normal',\r\n        lineHeight: 1.5,\r\n        tabSize: 4,\r\n        hyphens: 'none',\r\n      },\r\n\r\n      'pre[class*=\"language-\"]': {\r\n        color: '#f8f8f2',\r\n        background: '#272822',\r\n        margin: '.5em 0',\r\n        overflow: 'auto',\r\n      },\r\n\r\n      ':not(pre) > code[class*=\"language-\"]': {\r\n        whiteSpace: 'normal',\r\n      },\r\n\r\n      '.token.comment, .token.prolog, .token.doctype, .token.cdata': {\r\n        color: 'slategray',\r\n      },\r\n\r\n      '.token.punctuation': {\r\n        color: '#f8f8f2',\r\n      },\r\n\r\n      '.namespace': {\r\n        opacity: '.7',\r\n      },\r\n\r\n      '.token.property, .token.tag, .token.constant, .token.symbol, .token.deleted': {\r\n        color: '#f92672',\r\n      },\r\n\r\n      '.token.boolean, .token.number': {\r\n        color: '#ae81ff',\r\n      },\r\n\r\n      '.token.selector, .token.attr-name, .token.string, .token.char, .token.builtin, .token.inserted': {\r\n        color: '#a6e22e',\r\n      },\r\n\r\n      '.token.operator, .token.entity, .token.url, .language-css .token.string, .style .token.string, .token.variable': {\r\n        color: '#f8f8f2',\r\n      },\r\n\r\n      '.token.atrule, .token.attr-value, .token.function': {\r\n        color: '#e6db74',\r\n      },\r\n\r\n      '.token.keyword': {\r\n        color: '#66d9ef',\r\n      },\r\n\r\n      '.token.regex, .token.important': {\r\n        color: '#fd971f',\r\n      },\r\n\r\n      '.token.important, .token.bold': {\r\n        fontWeight: 'bold',\r\n      },\r\n\r\n      '.token.italic': {\r\n        fontStyle: 'italic',\r\n      },\r\n\r\n      '.token.entity': {\r\n        cursor: 'help',\r\n      },\r\n    }}\r\n  />\r\n);\r\n","import React, { useEffect } from 'react'\r\n\r\nconst src = 'https://utteranc.es/client.js'\r\nconst branch = 'master'\r\n\r\nconst Utterences = ({ repo }) => {\r\n  const rootElm = React.createRef()\r\n\r\n  useEffect(() => {\r\n    const utterances = document.createElement('script')\r\n    const utterancesConfig = {\r\n      src,\r\n      repo,\r\n      branch,\r\n      async: true,\r\n      'issue-term': 'pathname',\r\n    }\r\n\r\n\r\n    Object.keys(utterancesConfig).forEach(configKey => {\r\n      utterances.setAttribute(configKey, utterancesConfig[configKey])\r\n    })\r\n    rootElm.current.appendChild(utterances)\r\n  }, [])\r\n\r\n  return <div className=\"utterences\" ref={rootElm} />\r\n}\r\n\r\nexport default Utterences;","/* eslint-disable react/no-danger */\r\n\r\nimport React from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport PropTypes from 'prop-types';\r\nimport Helmet from 'react-helmet';\r\nimport dateformat from 'dateformat';\r\nimport styled from '@emotion/styled';\r\nimport site from '../shapes/site';\r\nimport Layout from '../components/layout';\r\nimport TagsList from '../components/tags-list';\r\nimport PostNav from '../components/post-nav';\r\nimport CodeStyle from '../emotion/code';\r\nimport pageContextShape from '../shapes/page-context';\r\nimport postShape from '../shapes/post';\r\nimport Utterences from '../components/utterances';\r\n\r\nconst Main = styled.main(({ theme }) => ({\r\n  color: theme.textColor,\r\n}));\r\n\r\nconst Header = styled.header(({ theme }) => ({\r\n  ...theme.centerPadding,\r\n  display: 'flex',\r\n  flexDirection: 'row',\r\n  alignItems: 'center',\r\n  justifyContent: 'space-between',\r\n  flexWrap: 'wrap',\r\n  [theme.smallMedia]: {\r\n    flexDirection: 'column',\r\n    flexWrap: 'nowrap',\r\n  },\r\n}));\r\n\r\nconst HeaderTitle = styled.h1(({ theme }) => ({\r\n  width: '85%',\r\n  marginBottom: theme.spacing,\r\n  [theme.smallMedia]: {\r\n    width: '100%',\r\n    textAlign: 'center',\r\n    marginBottom: 0,\r\n  },\r\n}));\r\n\r\nconst HeaderDate = styled.time(({ theme }) => ({\r\n  width: '15%',\r\n  textAlign: 'right',\r\n  [theme.smallMedia]: {\r\n    width: '100%',\r\n    textAlign: 'center',\r\n  },\r\n}));\r\n\r\nconst Footer = styled.footer(({ theme }) => ({\r\n  ...theme.centerPadding,\r\n}));\r\n\r\nconst PostWrap = styled.section(({ theme }) => ({\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center',\r\n  '> *': {\r\n    width: '100vw',\r\n    wordWrap: 'break-word',\r\n    ':not(.gatsby-highlight)': {\r\n      ...theme.centerPadding,\r\n    },\r\n  },\r\n  '> .gatsby-highlight > pre': {\r\n    ...theme.centerPadding,\r\n    paddingTop: theme.spacing,\r\n    paddingBottom: theme.spacing,\r\n  },\r\n  '>ul,>ol': {\r\n    marginLeft: `${theme.spacingPx * 4}px`,\r\n    width: `calc(100% - ${theme.spacingPx * 4}px)`,\r\n  },\r\n}));\r\n\r\nconst PostNavWrap = styled.div(({ theme }) => ({\r\n  ...theme.centerPadding,\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  flexDirection: 'row',\r\n  marginTop: theme.spacing,\r\n}));\r\n\r\nconst BlogPost = ({ data, pageContext }) => {\r\n  const { markdownRemark: post } = data;\r\n  const { title, siteUrl } = data.site.siteMetadata;\r\n  const { next, prev } = pageContext;\r\n\r\n  const isProduction = true;\r\n  //process.env.NODE_ENV === 'production';\r\n  const fullUrl = `${siteUrl}${post.frontmatter.path}`;\r\n\r\n  return (\r\n    <Layout>\r\n      <CodeStyle />\r\n      <Main>\r\n        <Helmet>\r\n          <title>\r\n            {post.frontmatter.title}\r\n            {' '}\r\n            &middot;\r\n            {' '}\r\n            {title}\r\n          </title>\r\n        </Helmet>\r\n        <article>\r\n          <Header>\r\n            <HeaderTitle>\r\n              {post.frontmatter.title}\r\n            </HeaderTitle>\r\n            <HeaderDate dateTime={dateformat(post.frontmatter.date, 'isoDateTime')}>\r\n              {dateformat(post.frontmatter.date, 'mmmm d, yyyy')}\r\n            </HeaderDate>\r\n            <TagsList tags={post.frontmatter.tags} />\r\n          </Header>\r\n          <PostWrap dangerouslySetInnerHTML={{ __html: post.html }} />\r\n        </article>\r\n        <PostNavWrap>\r\n          <PostNav prev post={prev} />\r\n          <PostNav next post={next} />\r\n        </PostNavWrap>\r\n        <Footer>\r\n            <Utterences repo=\"kestrel960408/blog-comments\" />\r\n          </Footer>\r\n      </Main>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nBlogPost.propTypes = {\r\n  data: PropTypes.shape({\r\n    site,\r\n    markdownRemark: postShape,\r\n  }).isRequired,\r\n  pageContext: pageContextShape.isRequired,\r\n};\r\n\r\nexport default BlogPost;\r\n\r\nexport const query = graphql`\r\n  query BlogPostByPath($refPath: String!) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        siteUrl\r\n      }\r\n    }\r\n    markdownRemark(frontmatter: { path: { eq: $refPath } }) {\r\n      html\r\n      frontmatter {\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        path\r\n        tags\r\n        title\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import PropTypes from 'prop-types';\r\n\r\nexport const context = PropTypes.oneOfType([\r\n  PropTypes.bool,\r\n  PropTypes.shape({\r\n    frontmatter: PropTypes.shape({\r\n      title: PropTypes.string.isRequired,\r\n      path: PropTypes.string.isRequired,\r\n    }),\r\n  }),\r\n]);\r\n\r\nexport default PropTypes.shape({\r\n  next: context,\r\n  prev: context,\r\n});\r\n"],"sourceRoot":""}